import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Students {

	public static void main(String[] args) {
		//int []avg = {0,0,1,1,1,0,0,1};
		//int []avg = {0,1,0,1,1,0};
		/*List <Integer> arr = new ArrayList<Integer>(Arrays.asList(0,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				1,
				0,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				1,
				0,
				1,
				1,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				0,
				1,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				0,
				0,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				1,
				0,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				1,
				1,
				1,
				0,
				1,
				0,
				1,
				0,
				1,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				1,
				0,
				1,
				1,
				1,
				1,
				0,
				0,
				1,
				1,
				0,
				0,
				0,
				0,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				1,
				0));*/
		//int []arr = {1,1,1,1,0,1,0,1};
		List <Integer> arr = new ArrayList<Integer>(Arrays.asList(1,1,1,1,0,1,0,1));
		int numberOfMoves = minMoves(arr);
		System.out.println("Number of moves - " + numberOfMoves);
	}

    private static int numOfSwaps = 0;

    public static int minMoves(List<Integer> arr) {
        int numberOfMoves = 0;

        int start = arr.get(0);
        int end = 1 - start;

        for(int i = 0; i < arr.size(); i++) {
            if(arr.get(i) == start){
                continue;
            }

            while(arr.get(i) == end){
                boolean swapped = false;

                for(int j = i; j < arr.size()-1; j++){
                    if(arr.get(j+1) == start){
                        swapped = true;
                        swap(arr, j, j+1);
                    }
                }
                if(!swapped){
                    break;
                }
                i++;
            }
        }
        numberOfMoves = numOfSwaps;

        return numberOfMoves;
    }

    public static void swap(List <Integer> arr, int index1, int index2){
        int original = arr.get(index1);
        
        arr.set(index1, arr.get(index2));
        arr.set(index2, original);
        numOfSwaps++;
    }

}
